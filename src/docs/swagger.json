{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserResponseDto": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"CPFCNPJ": {
						"type": "string",
						"nullable": true
					},
					"CRM": {
						"type": "string",
						"nullable": true
					},
					"nationalId": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"name",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"cnpj": {
						"type": "string"
					},
					"crm": {
						"type": "string"
					},
					"nationalId": {
						"type": "string"
					},
					"userRole": {
						"type": "string",
						"enum": [
							"ADMIN",
							"ORGANIZER",
							"PARTICIPANT"
						]
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"userRole"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateUserDto_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"cnpj": {
						"type": "string"
					},
					"crm": {
						"type": "string"
					},
					"nationalId": {
						"type": "string"
					},
					"userRole": {
						"type": "string",
						"enum": [
							"ADMIN",
							"ORGANIZER",
							"PARTICIPANT"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"DefaultSelection_Prisma._36_EventFieldResponsePayload_": {
				"properties": {
					"value": {
						"type": "string"
					},
					"eventFieldId": {
						"type": "number",
						"format": "double"
					},
					"eventRegistrationId": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"value",
					"eventFieldId",
					"eventRegistrationId",
					"id"
				],
				"type": "object"
			},
			"EventFieldResponse": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_EventFieldResponsePayload_",
				"description": "Model EventFieldResponse"
			},
			"FieldErrors": {
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"properties": {
						"value": {},
						"message": {
							"type": "string"
						}
					},
					"required": [
						"message"
					],
					"type": "object"
				}
			},
			"ValidateError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"fields": {
						"$ref": "#/components/schemas/FieldErrors"
					}
				},
				"required": [
					"name",
					"message",
					"status",
					"fields"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateEventFieldResponseDto": {
				"properties": {
					"eventRegistrationId": {
						"type": "number",
						"format": "double"
					},
					"eventFieldId": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					}
				},
				"required": [
					"eventRegistrationId",
					"eventFieldId",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EventFieldResponse2Dto": {
				"properties": {
					"eventRegistrationId": {
						"type": "number",
						"format": "double"
					},
					"eventFieldId": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"eventRegistrationId",
					"eventFieldId",
					"value",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateEventFieldResponseDto_": {
				"properties": {
					"eventRegistrationId": {
						"type": "number",
						"format": "double"
					},
					"eventFieldId": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"EventResponseDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"organizerId": {
						"type": "number",
						"format": "double"
					},
					"format": {
						"type": "string",
						"enum": [
							"PRESENTIAL",
							"ONLINE",
							"HYBRID"
						]
					},
					"location": {
						"type": "string",
						"nullable": true
					},
					"userDocument": {
						"type": "boolean"
					},
					"banner": {
						"type": "string",
						"nullable": true
					},
					"eventType": {
						"type": "string",
						"enum": [
							"SIMPLE",
							"LARGE"
						]
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"maxCapacity": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"complementaryHours": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"status": {
						"type": "string",
						"enum": [
							"PENDING",
							"CONFIRMED",
							"CANCELED"
						]
					},
					"category": {
						"type": "string",
						"enum": [
							"TALK",
							"LECTURE",
							"WORKSHOP",
							"SEMINAR",
							"SHORT_COURSE",
							"OTHER",
							null
						],
						"nullable": true
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"description",
					"organizerId",
					"format",
					"userDocument",
					"eventType",
					"startDate",
					"endDate",
					"status",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateEventDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"organizerId": {
						"type": "number",
						"format": "double"
					},
					"format": {
						"type": "string",
						"enum": [
							"PRESENTIAL",
							"ONLINE",
							"HYBRID"
						]
					},
					"location": {
						"type": "string",
						"nullable": true
					},
					"userDocument": {
						"type": "boolean"
					},
					"banner": {
						"type": "string",
						"nullable": true
					},
					"eventType": {
						"type": "string",
						"enum": [
							"SIMPLE",
							"LARGE"
						]
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"maxCapacity": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"complementaryHours": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"status": {
						"type": "string",
						"enum": [
							"PENDING",
							"CONFIRMED",
							"CANCELED"
						]
					},
					"category": {
						"type": "string",
						"enum": [
							"TALK",
							"LECTURE",
							"WORKSHOP",
							"SEMINAR",
							"SHORT_COURSE",
							"OTHER",
							null
						],
						"nullable": true
					}
				},
				"required": [
					"name",
					"description",
					"organizerId",
					"format",
					"userDocument",
					"eventType",
					"startDate",
					"endDate",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateEventDto_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"organizerId": {
						"type": "number",
						"format": "double"
					},
					"format": {
						"type": "string",
						"enum": [
							"PRESENTIAL",
							"ONLINE",
							"HYBRID"
						]
					},
					"location": {
						"type": "string"
					},
					"userDocument": {
						"type": "boolean"
					},
					"banner": {
						"type": "string"
					},
					"eventType": {
						"type": "string",
						"enum": [
							"SIMPLE",
							"LARGE"
						]
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"maxCapacity": {
						"type": "number",
						"format": "double"
					},
					"complementaryHours": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string",
						"enum": [
							"PENDING",
							"CONFIRMED",
							"CANCELED"
						]
					},
					"category": {
						"type": "string",
						"enum": [
							"TALK",
							"LECTURE",
							"WORKSHOP",
							"SEMINAR",
							"SHORT_COURSE",
							"OTHER"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UpdateEventDto": {
				"$ref": "#/components/schemas/Partial_CreateEventDto_"
			},
			"_36_Enums.FieldType": {
				"type": "string",
				"enum": [
					"STRING",
					"NUMBER",
					"DATE",
					"BOOLEAN"
				]
			},
			"DefaultSelection_Prisma._36_EventFieldPayload_": {
				"properties": {
					"required": {
						"type": "boolean"
					},
					"type": {
						"$ref": "#/components/schemas/_36_Enums.FieldType"
					},
					"eventId": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"required",
					"type",
					"eventId",
					"id",
					"name"
				],
				"type": "object"
			},
			"EventField": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_EventFieldPayload_",
				"description": "Model EventField"
			},
			"FieldType": {
				"$ref": "#/components/schemas/_36_Enums.FieldType"
			},
			"CreateEventFieldRequestDTO": {
				"properties": {
					"eventId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/FieldType"
					},
					"required": {
						"type": "boolean"
					}
				},
				"required": [
					"eventId",
					"name",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Error": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_UpdateEventFieldRequestDTO_": {
				"properties": {
					"eventId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/_36_Enums.FieldType"
					},
					"required": {
						"type": "boolean"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "app-eventos-ifsp-backend",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDto"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponseDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/UserResponseDto"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_CreateUserDto_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/eventFieldResponses": {
			"post": {
				"operationId": "CreateEventFieldResponse",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventFieldResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field Response"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEventFieldResponseDto"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllEventFieldResponses",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/EventFieldResponse2Dto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/eventFieldResponses/{id}": {
			"put": {
				"operationId": "UpdateEventFieldResponse",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventFieldResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field Response"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_CreateEventFieldResponseDto_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEventFieldResponse",
				"responses": {
					"204": {
						"description": "deleted successfully"
					}
				},
				"tags": [
					"Event Field Response"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/events": {
			"post": {
				"operationId": "CreateEvent",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEventDto"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetEvents",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"total": {
											"type": "number",
											"format": "double"
										},
										"events": {
											"items": {
												"$ref": "#/components/schemas/EventResponseDto"
											},
											"type": "array"
										}
									},
									"required": [
										"total",
										"events"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": 12,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "format",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "eventType",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "searchTerm",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/events/{id}": {
			"get": {
				"operationId": "GetEventById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateEvent",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateEventDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEvent",
				"responses": {
					"200": {
						"description": "Event deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/events/format/{format}": {
			"get": {
				"operationId": "GetEventsByFormat",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/EventResponseDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/events/type/{eventType}": {
			"get": {
				"operationId": "GetEventsByType",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/EventResponseDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventType",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/eventFields": {
			"post": {
				"operationId": "CreateEventField",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventField"
								}
							}
						}
					},
					"400": {
						"description": "Validation failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEventFieldRequestDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllEventFields",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/EventField"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field"
				],
				"security": [],
				"parameters": []
			}
		},
		"/eventFields/{id}": {
			"put": {
				"operationId": "UpdateEventField",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventField"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_UpdateEventFieldRequestDTO_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEventField",
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				},
				"tags": [
					"Event Field"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}