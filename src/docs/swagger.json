{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserResponseDto": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"CPFCNPJ": {
						"type": "string",
						"nullable": true
					},
					"CRM": {
						"type": "string",
						"nullable": true
					},
					"nationalId": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"name",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"cnpj": {
						"type": "string"
					},
					"crm": {
						"type": "string"
					},
					"nationalId": {
						"type": "string"
					},
					"userRole": {
						"type": "string",
						"enum": [
							"ADMIN",
							"ORGANIZER",
							"PARTICIPANT"
						]
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"userRole"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateUserDto_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"cnpj": {
						"type": "string"
					},
					"crm": {
						"type": "string"
					},
					"nationalId": {
						"type": "string"
					},
					"userRole": {
						"type": "string",
						"enum": [
							"ADMIN",
							"ORGANIZER",
							"PARTICIPANT"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"_36_Enums.UserRole": {
				"type": "string",
				"enum": [
					"ADMIN",
					"ORGANIZER",
					"PARTICIPANT"
				]
			},
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"cnpj": {
						"type": "string"
					},
					"crm": {
						"type": "string"
					},
					"nationalId": {
						"type": "string"
					},
					"userRole": {
						"$ref": "#/components/schemas/_36_Enums.UserRole"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"cpf",
					"cnpj",
					"crm",
					"nationalId",
					"userRole",
					"id",
					"refreshToken"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"AuthResponseDto": {
				"properties": {
					"token": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/Omit_User.password_"
					}
				},
				"required": [
					"token",
					"refreshToken",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.password-or-refreshToken__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"cnpj": {
						"type": "string"
					},
					"crm": {
						"type": "string"
					},
					"nationalId": {
						"type": "string"
					},
					"userRole": {
						"$ref": "#/components/schemas/_36_Enums.UserRole"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"email",
					"cpf",
					"cnpj",
					"crm",
					"nationalId",
					"userRole",
					"id"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password-or-refreshToken_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password-or-refreshToken__",
				"description": "Construct a type with the properties of T except for those in type K."
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "app-eventos-ifsp-backend",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDto"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponseDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/UserResponseDto"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"ADMIN",
							"PARTICIPANT",
							"ORGANIZER"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_CreateUserDto_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"ADMIN",
							"PARTICIPANT",
							"ORGANIZER"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseDto"
								}
							}
						}
					}
				},
				"description": "Login de usuário",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginDto"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseDto"
								}
							}
						}
					}
				},
				"description": "Registro de novo usuário",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDto"
							}
						}
					}
				}
			}
		},
		"/auth/refresh": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseDto"
								}
							}
						}
					}
				},
				"description": "Renovação de token",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"refreshToken": {
										"type": "string"
									}
								},
								"required": [
									"refreshToken"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Logout de usuário",
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/auth/me": {
			"get": {
				"operationId": "GetCurrentUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Omit_User.password-or-refreshToken_"
								}
							}
						}
					}
				},
				"description": "Obter dados do usuário atual",
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}